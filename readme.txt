ngn/k is a simple fast vector programming language
license: GNU AGPLv3 (v3 only) - https://codeberg.org/ngn/k/raw/branch/master/LICENSE
build: make CC=clang-11 # or CC=gcc-10
usage: rlwrap ./k repl.k
try online: https://ngn.codeberg.page/k

related projects:
https://github.com/gitonthescene/ngnk-mode                 - emacs mode
https://github.com/razetime/ngn-k-tutorial                 - tutorial (work in progress)
https://xpqz.github.io/kbook/                              - book (work in progress)
https://github.com/secwang/ngnkcart                        - searchable database of snippets
https://github.com/xpqz/ngnk_mirror                        - continuous integration for osx
https://github.com/traws0/ngnk-windows                     - windows port
https://github.com/nathyong/ngnk-nix                       - nix package
https://code.golf/rankings/holes/all/k/bytes               - code golf
https://week.golf/                                         - code golf
https://codegolf.stackexchange.com/search?tab=newest&q=ngn - code golf
https://k.miraheze.org/wiki/Advent_of_Code                 - aoc solutions by multiple people
https://github.com/xpqz/dyalogk                            - dyalog competition solutions
https://codeberg.org/CptJimKirk/kpl                        - kpl, apl-like extensions for k
https://github.com/SirBogman/codemirror-lang-k             - codemirror lezer parser
https://codeberg.org/suhr/kes                              - embedding example
https://github.com/gitonthescene/ngnk-libs                 - collection of libraries


0.c main()                              k.h  embedding api
m.c memory manager                      a.h  common header
p.c parser                              g.h  header generated by g.k
b.c bytecode compiler and vm            t/   unit tests
a.c eval, apply, amend, drill: . @      w/   web ui
h.c shape-related: x#y ,x x,y           x/   example for using libk.so
o.c order and equivalence               o/   build output
s.c string formatting: $x `k@x          l/   k libraries
f.c find, random: x?y                   g/   https://codegolf.stackexchange.com/
1.c arithmetic monadic verbs            e/   https://projecteuler.net/
2.c arithmetic dyadic  verbs            dy/  https://problems.tryapl.org/
3.c arithmetic       adverbs            aoc/ https://adventofcode.com/
4.c prime sieve
i.c input/output
v.c the rest of the verbs
w.c adverbs
j.c json: `j@x `j?x
x.c serialization: `@x `?x
e.c error handling
k.c impl of embedding api
