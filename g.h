// ngn/k, (c) 2019-2021 ngn, license: GNU AGPLv3 - https://git.sr.ht/~ngn/k/blob/master/LICENSE
// generated by g.k
#define xk Ak(x)
#define xn An(x)
#define xo Ao(x)
#define xt At(x)
#define xv Av(x)
#define yk Ak(y)
#define yn An(y)
#define yo Ao(y)
#define yt At(y)
#define yv Av(y)
#define zk Ak(z)
#define zn An(z)
#define zo Ao(z)
#define zt At(z)
#define zv Av(z)
#define uk Ak(u)
#define un An(u)
#define uo Ao(u)
#define ut At(u)
#define uv Av(u)
#define xN _N(x)
#define yN _N(y)
#define zN _N(z)
#define uN _N(u)
#define xR mR(x)
#define yR mR(y)
#define zR mR(z)
#define uR mR(u)
#define x(a) dex(x,a)
#define y(a) dex(y,a)
#define z(a) dex(z,a)
#define u(a) dex(u,a)
#define xA ((A*)dat(x))
#define xC ((C*)dat(x))
#define xH ((H*)dat(x))
#define xI ((I*)dat(x))
#define xL ((L*)dat(x))
#define xD ((D*)dat(x))
#define yA ((A*)dat(y))
#define yC ((C*)dat(y))
#define yH ((H*)dat(y))
#define yI ((I*)dat(y))
#define yL ((L*)dat(y))
#define yD ((D*)dat(y))
#define zA ((A*)dat(z))
#define zC ((C*)dat(z))
#define zH ((H*)dat(z))
#define zI ((I*)dat(z))
#define zL ((L*)dat(z))
#define zD ((D*)dat(z))
#define uA ((A*)dat(u))
#define uC ((C*)dat(u))
#define uH ((H*)dat(u))
#define uI ((I*)dat(u))
#define uL ((L*)dat(u))
#define uD ((D*)dat(u))
#define xa xA[i]
#define xc xC[i]
#define xh xH[i]
#define xi xI[i]
#define xl xL[i]
#define xd xD[i]
#define ya yA[i]
#define yc yC[i]
#define yh yH[i]
#define yi yI[i]
#define yl yL[i]
#define yd yD[i]
#define za zA[i]
#define zc zC[i]
#define zh zH[i]
#define zi zI[i]
#define zl zL[i]
#define zd zD[i]
#define ua uA[i]
#define uc uC[i]
#define uh uH[i]
#define ui uI[i]
#define ul uL[i]
#define ud uD[i]
#define xx xA[0]
#define xy xA[1]
#define xz xA[2]
#define yx yA[0]
#define yy yA[1]
#define yz yA[2]
#define zx zA[0]
#define zy zA[1]
#define zz zA[2]
#define ux uA[0]
#define uy uA[1]
#define uz uA[2]
#define xtt (xt>tm)
#define ytt (yt>tm)
#define ztt (zt>tm)
#define utt (ut>tm)
#define xtT (xt<tM)
#define ytT (yt<tM)
#define ztT (zt<tM)
#define utT (ut<tM)
#define xtA (xt==tA)
#define xtC (xt==tC)
#define xtH (xt==tH)
#define xtI (xt==tI)
#define xtL (xt==tL)
#define xtD (xt==tD)
#define xtS (xt==tS)
#define xtM (xt==tM)
#define xtm (xt==tm)
#define xtc (xt==tc)
#define xth (xt==th)
#define xti (xt==ti)
#define xtl (xt==tl)
#define xtd (xt==td)
#define xts (xt==ts)
#define xto (xt==to)
#define xtp (xt==tp)
#define xtq (xt==tq)
#define xtr (xt==tr)
#define xtu (xt==tu)
#define xtv (xt==tv)
#define xtw (xt==tw)
#define ytA (yt==tA)
#define ytC (yt==tC)
#define ytH (yt==tH)
#define ytI (yt==tI)
#define ytL (yt==tL)
#define ytD (yt==tD)
#define ytS (yt==tS)
#define ytM (yt==tM)
#define ytm (yt==tm)
#define ytc (yt==tc)
#define yth (yt==th)
#define yti (yt==ti)
#define ytl (yt==tl)
#define ytd (yt==td)
#define yts (yt==ts)
#define yto (yt==to)
#define ytp (yt==tp)
#define ytq (yt==tq)
#define ytr (yt==tr)
#define ytu (yt==tu)
#define ytv (yt==tv)
#define ytw (yt==tw)
#define ztA (zt==tA)
#define ztC (zt==tC)
#define ztH (zt==tH)
#define ztI (zt==tI)
#define ztL (zt==tL)
#define ztD (zt==tD)
#define ztS (zt==tS)
#define ztM (zt==tM)
#define ztm (zt==tm)
#define ztc (zt==tc)
#define zth (zt==th)
#define zti (zt==ti)
#define ztl (zt==tl)
#define ztd (zt==td)
#define zts (zt==ts)
#define zto (zt==to)
#define ztp (zt==tp)
#define ztq (zt==tq)
#define ztr (zt==tr)
#define ztu (zt==tu)
#define ztv (zt==tv)
#define ztw (zt==tw)
#define utA (ut==tA)
#define utC (ut==tC)
#define utH (ut==tH)
#define utI (ut==tI)
#define utL (ut==tL)
#define utD (ut==tD)
#define utS (ut==tS)
#define utM (ut==tM)
#define utm (ut==tm)
#define utc (ut==tc)
#define uth (ut==th)
#define uti (ut==ti)
#define utl (ut==tl)
#define utd (ut==td)
#define uts (ut==ts)
#define uto (ut==to)
#define utp (ut==tp)
#define utq (ut==tq)
#define utr (ut==tr)
#define utu (ut==tu)
#define utv (ut==tv)
#define utw (ut==tw)
#define xtP _P(xt)
#define xtF _F(xt)
#define xtR _R(xt)
#define ytP _P(yt)
#define ytF _F(yt)
#define ytR _R(yt)
#define ztP _P(zt)
#define ztF _F(zt)
#define ztR _R(zt)
#define utP _P(ut)
#define utF _F(ut)
#define utR _R(ut)
#define xtz c3(th,xt,tl)
#define ytz c3(th,yt,tl)
#define ztz c3(th,zt,tl)
#define utz c3(th,ut,tl)
#define xtZ c3(tH,xt,tL)
#define ytZ c3(tH,yt,tL)
#define ztZ c3(tH,zt,tL)
#define utZ c3(tH,ut,tL)
#define xtcC (xtc||xtC)
#define xthH (xth||xtH)
#define xtiI (xti||xtI)
#define xtlL (xtl||xtL)
#define xtdD (xtd||xtD)
#define xtsS (xts||xtS)
#define xtmM (xtm||xtM)
#define xtzZ (xtz||xtZ)
#define ytcC (ytc||ytC)
#define ythH (yth||ytH)
#define ytiI (yti||ytI)
#define ytlL (ytl||ytL)
#define ytdD (ytd||ytD)
#define ytsS (yts||ytS)
#define ytmM (ytm||ytM)
#define ytzZ (ytz||ytZ)
#define ztcC (ztc||ztC)
#define zthH (zth||ztH)
#define ztiI (zti||ztI)
#define ztlL (ztl||ztL)
#define ztdD (ztd||ztD)
#define ztsS (zts||ztS)
#define ztmM (ztm||ztM)
#define ztzZ (ztz||ztZ)
#define utcC (utc||utC)
#define uthH (uth||utH)
#define utiI (uti||utI)
#define utlL (utl||utL)
#define utdD (utd||utD)
#define utsS (uts||utS)
#define utmM (utm||utM)
#define utzZ (utz||utZ)
#define xtmMA (xtmM||xtA)
#define ytmMA (ytmM||ytA)
#define ztmMA (ztmM||ztA)
#define utmMA (utmM||utA)
#define XA(a...) P(xtA,a)
#define XC(a...) P(xtC,a)
#define XH(a...) P(xtH,a)
#define XI(a...) P(xtI,a)
#define XL(a...) P(xtL,a)
#define XD(a...) P(xtD,a)
#define XS(a...) P(xtS,a)
#define XM(a...) P(xtM,a)
#define Xm(a...) P(xtm,a)
#define Xc(a...) P(xtc,a)
#define Xh(a...) P(xth,a)
#define Xi(a...) P(xti,a)
#define Xl(a...) P(xtl,a)
#define Xd(a...) P(xtd,a)
#define Xs(a...) P(xts,a)
#define Xo(a...) P(xto,a)
#define Xp(a...) P(xtp,a)
#define Xq(a...) P(xtq,a)
#define Xr(a...) P(xtr,a)
#define Xu(a...) P(xtu,a)
#define Xv(a...) P(xtv,a)
#define Xw(a...) P(xtw,a)
#define XT(a...) P(xtT,a)
#define Xt(a...) P(xtt,a)
#define XZ(a...) P(xtZ,a)
#define Xz(a...) P(xtz,a)
#define XP(a...) P(xtP,a)
#define XF(a...) P(xtF,a)
#define XR(a...) P(xtR,a)
#define XzZ(a...) P(xtzZ,a)
#define XcC(a...) P(xtcC,a)
#define XiI(a...) P(xtiI,a)
#define XhH(a...) P(xthH,a)
#define XlL(a...) P(xtlL,a)
#define XdD(a...) P(xtdD,a)
#define XsS(a...) P(xtsS,a)
#define XmMA(a...) P(xtmMA,a)
#define YA(a...) P(ytA,a)
#define YC(a...) P(ytC,a)
#define YH(a...) P(ytH,a)
#define YI(a...) P(ytI,a)
#define YL(a...) P(ytL,a)
#define YD(a...) P(ytD,a)
#define YS(a...) P(ytS,a)
#define YM(a...) P(ytM,a)
#define Ym(a...) P(ytm,a)
#define Yc(a...) P(ytc,a)
#define Yh(a...) P(yth,a)
#define Yi(a...) P(yti,a)
#define Yl(a...) P(ytl,a)
#define Yd(a...) P(ytd,a)
#define Ys(a...) P(yts,a)
#define Yo(a...) P(yto,a)
#define Yp(a...) P(ytp,a)
#define Yq(a...) P(ytq,a)
#define Yr(a...) P(ytr,a)
#define Yu(a...) P(ytu,a)
#define Yv(a...) P(ytv,a)
#define Yw(a...) P(ytw,a)
#define YT(a...) P(ytT,a)
#define Yt(a...) P(ytt,a)
#define YZ(a...) P(ytZ,a)
#define Yz(a...) P(ytz,a)
#define YP(a...) P(ytP,a)
#define YF(a...) P(ytF,a)
#define YR(a...) P(ytR,a)
#define YzZ(a...) P(ytzZ,a)
#define YcC(a...) P(ytcC,a)
#define YiI(a...) P(ytiI,a)
#define YhH(a...) P(ythH,a)
#define YlL(a...) P(ytlL,a)
#define YdD(a...) P(ytdD,a)
#define YsS(a...) P(ytsS,a)
#define YmMA(a...) P(ytmMA,a)
#define Cb C b
#define Cc C c
#define Cd C d
#define Ck C k
#define Cn C n
#define Co C o
#define Ct C t
#define Cv C v
#define Hi H i
#define Hj H j
#define Hk H k
#define Hm H m
#define Hn H n
#define Hv H v
#define Ii I i
#define Ij I j
#define Ik I k
#define Im I m
#define In I n
#define Iv I v
#define Li L i
#define Lj L j
#define Lk L k
#define Lm L m
#define Ln L n
#define Lv L v
#define Dd D d
#define Dv D v
#define Ax A x
#define Ay A y
#define Az A z
#define Au A u
#define OA O A
#define OC O C
#define OV O V
#define Ec(a...) E_(c,a)
#define Ed(a...) E_(d,a)
#define Ei(a...) E_(i,a)
#define El(a...) E_(l,a)
#define En(a...) E_(n,a)
#define Eo(a...) E_(o,a)
#define Ep(a...) E_(p,a)
#define Er(a...) E_(r,a)
#define Es(a...) E_(s,a)
#define Et(a...) E_(t,a)
#define Ev(a...) E_(v,a)
#define Ez(a...) E_(z,a)
#define Nx(r) N1(x,r)
#define Ny(r) N1(y,r)
#define Nz(r) N1(z,r)
#define Nu(r) N1(u,r)
#define aA0 mR(ce[tA])
#define aC0 mR(ce[tC])
#define aL0 mR(ce[tL])
#define aD0 mR(ce[tD])
#define aS0 mR(ce[tS])
#define am0 mR(ce[tm])
#define xq(a) _q(x,a)
#define yq(a) _q(y,a)
#define zq(a) _q(z,a)
#define uq(a) _q(u,a)
